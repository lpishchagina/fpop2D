library(fpop2D)
library(fpop2D)
#Simple examples
devtools::install_github("lpishchagina/fpop2D")
library(fpop2D)
n <- 8
chp <- c(3,6,8)
mu1 <- c(1, 5,8)
mu2 <- c(3, 10,1)
sigma <- 0.3
penalty <- 2*log(n)
data <- data_gen2D(n, chp, mu1, mu2, sigma)
data
resPELT<- FPOP2D(data[1,], data[2,], penalty, type = 0)
resPELT
resFPOP1<- FPOP2D(data[1,], data[2,], penalty, type = 1)
resFPOP1
resFPOP2<- FPOP2D(data[1,], data[2,], penalty, type = 2)
resFPOP2
T_n <- 1000
T_chp <- seq(from = 100, to = T5_n, by = 100)
T_mu1 <- rpois(T5_n/100, 10)
T_mu2 <- rpois(T5_n/100, 5)
T_sigma <- 1
T_penalty <- 2 * T_sigma * log(T_n)
T_data <- data_gen2D(T_n, T_chp, T_mu1, T_mu2, T_sigma)
T_n <- 1000
T_chp <- seq(from = 100, to = T_n, by = 100)
T_mu1 <- rpois(T_n/100, 10)
T_mu2 <- rpois(T_n/100, 5)
T_sigma <- 1
T_penalty <- 2 * T_sigma * log(T_n)
T_data <- data_gen2D(T_n, T_chp, T_mu1, T_mu2, T_sigma)
OneStep <- function(data1, data2, penalty, type, func = "FPOP2D")
{
if (type == 0){t <- system.time(FPOP2D(data1, data2, penalty, type = 0))[[1]]}
if (type == 1){t <- system.time(FPOP2D(data1, data2, penalty, type = 1))[[1]]}
if (type == 2){t <- system.time(FPOP2D(data1, data2, penalty, type = 2))[[1]]}
return(t)
}
T_timePELT <- OneStep(T_data[1,], T_data[2,], T_penalty, type = 0, func = "FPOP2D")
T_timePELT
T_n <- 5000
T_chp <- seq(from = 100, to = T_n, by = 100)
T_mu1 <- rpois(T_n/100, 10)
T_mu2 <- rpois(T_n/100, 5)
T_sigma <- 1
T_penalty <- 2 * T_sigma * log(T_n)
T_data <- data_gen2D(T_n, T_chp, T_mu1, T_mu2, T_sigma)
T_timePELT <- OneStep(T_data[1,], T_data[2,], T_penalty, type = 0, func = "FPOP2D")
T_timePELT
#
T_n <- 10000
T_chp <- seq(from = 100, to = T_n, by = 100)
T_mu1 <- rpois(T_n/100, 10)
T_mu2 <- rpois(T_n/100, 5)
T_sigma <- 1
T_penalty <- 2 * T_sigma * log(T_n)
T_data <- data_gen2D(T_n, T_chp, T_mu1, T_mu2, T_sigma)
T_timePELT <- OneStep(T_data[1,], T_data[2,], T_penalty, type = 0, func = "FPOP2D")
T_timePELT
T_timeFPOPt1 <- OneStep(T5_data[1,], T5_data[2,], T5_penalty, type = 1, func = "FPOP2D")
T_timeFPOPt1
T_timeFPOPt1 <- OneStep(T_data[1,], T_data[2,], T_penalty, type = 1, func = "FPOP2D")
T_timeFPOPt1
T_timeFPOPt2 <- OneStep(T_data[1,], T_data[2,], T_penalty, type = 2, func = "FPOP2D")
T_timeFPOPt2
T_timePELT/T_timeFPOPt1
T_timePELT/T_timeFPOPt2
T_timeFPOPt2/T_timeFPOPt1
T_timeFPOPt1/T_timePELT
T_timeFPOPt2/T_timePELT
T_timeFPOPt1/T_timeFPOPt2
T_n <- 10000
m <- floor(sqrt(T_n)/4)
m
T1_n <- 10000
m <- floor(sqrt(T1_n)/4)
# 25
T1_chp <-  c(sort(runif(m - 1,0,T1_n-1)), T_n)
T1_n <- 10000
m <- floor(sqrt(T1_n)/4)
# 25
T1_chp
T1_n <- 10000
m <- floor(sqrt(T1_n)/4)
# 25
T1_chp <-  c(sort(runif(m - 1,0,T1_n-1)), T_n)
T1_mu1 <- rpois(m, 10)
T1_mu2 <- rpois(m, 5)
T_sigma <- 1
T_penalty <- 2 * T_sigma * log(T1_n)
T1_data <- data_gen2D(T1_n, T1_chp, T1_mu1, T1_mu2, T_sigma)
T1_chp <-  c(sort(runif(m - 1,0,T1_n-1)), T_n)
T1_chp
T1_mu1 <- rpois(m,10)
T1_mu1
T1_mu2 <- rpois(m, 5)
T1_data <- data_gen2D(T1_n, T1_chp, T1_mu1, T1_mu2, T_sigma)
T1_data
T1_chp
T1_chp <-  c(sort(floor(runif(m - 1,0,T1_n-1))), T_n)
T1_chp
T1_n <- 10000
m <- floor(sqrt(T1_n)/4)
# 25
T1_chp <-  c(sort(floor(runif(m - 1,0,T1_n-1))), T_n)
T1_mu1 <- rpois(m,10)
T1_mu2 <- rpois(m, 5)
T_sigma <- 1
T_penalty <- 2 * T_sigma * log(T1_n)
T1_data <- data_gen2D(T1_n, T1_chp, T1_mu1, T1_mu2, T_sigma)
T1_timePELT <- OneStep(T1_data[1,], T1_data[2,], T_penalty, type = 0, func = "FPOP2D")
T1_timePELT
T1_timeFPOPt1 <- OneStep(T1_data[1,], T1_data[2,], T_penalty, type = 1, func = "FPOP2D")
T1_timeFPOPt1
T1_timeFPOPt2 <- OneStep(T1_data[1,], T1_data[2,], T_penalty, type = 2, func = "FPOP2D")
T1_timeFPOPt2
T1_timeFPOPt1/T1_timePELT
T1_timeFPOPt2/T1_timePELT
T1_timeFPOPt1/T1_timeFPOPt2
